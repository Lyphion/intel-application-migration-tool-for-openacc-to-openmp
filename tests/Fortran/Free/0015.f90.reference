program app
integer :: N
integer :: res1, res2
  !$acc routine(foo,meaningoflife)
!$omp declare target (foo,meaningoflife)
  !$acc serial copyout(res1, res2)
!$omp target map(from:res1,res2)
  call foo(N,res1)
  res2 = meaningoflife(N)
  !$acc end serial
!$omp end target
  write (*,*) res1 .eq. res2
end program

function meaningoflife(N)
  integer :: N
  integer :: meaningoflife
  !$acc routine
!$omp declare target
  meaningoflife = 42 + N
end function

subroutine foo (N, R)
  integer, intent(in) :: N
  integer, intent(out) :: R
  !$acc routine
!$omp declare target
  R = N + R
end subroutine

! Code was translated using: /nfs/pdx/home/hservatg/src/openacc2openmp.git/src/openacc2openmp.py -no-generate-multidimensional-alternate-code -no-conditional-define -force-backup -free 0015.f90
